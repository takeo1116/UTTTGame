# coding:utf-8

from engine.record import MoveData

'''
盤面の回転について
盤面を表現するindexには2種類ある
    engineのindex：盤面の一行目が[0, 1, 2 | 9, 10, 11 | 18, 19, 20]となっているもの
        ゲームエンジンの都合上
    modelのindex：盤面の一行目が[0, 1, 2 | 3, 4, 5 | 6, 7, 8]となっているもの
        CNNなどのフィルタの都合上
movedataで用いられているのはengineのindexであって、これを特徴量に変換する際にmodelのindexに変換する

engine_model_permは2つのindexを相互に変換する順列であり、逆変換も同じである

engine_permsとmodel_permsはそれぞれのindexで盤面を8通りに回転・反転させる順列である
これら2つの順列は、盤面をengine_model_permで別のindexに飛ばしたあと回転させて逆変換でもとのindexに戻すことで相互に得られる
'''

engine_model_perm = [0, 1, 2, 9, 10, 11, 18, 19, 20, 3, 4, 5, 12, 13, 14, 21, 22, 23, 6, 7, 8, 15, 16, 17, 24, 25, 26, 27, 28, 29, 36, 37, 38, 45, 46, 47, 30, 31, 32,
                     39, 40, 41, 48, 49, 50, 33, 34, 35, 42, 43, 44, 51, 52, 53, 54, 55, 56, 63, 64, 65, 72, 73, 74, 57, 58, 59, 66, 67, 68, 75, 76, 77, 60, 61, 62, 69, 70, 71, 78, 79, 80]
engine_perms = [
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80],
    [20, 23, 26, 19, 22, 25, 18, 21, 24, 47, 50, 53, 46, 49, 52, 45, 48, 51, 74, 77, 80, 73, 76, 79, 72, 75, 78, 11, 14, 17, 10, 13, 16, 9, 12, 15, 38, 41, 44, 37,
        40, 43, 36, 39, 42, 65, 68, 71, 64, 67, 70, 63, 66, 69, 2, 5, 8, 1, 4, 7, 0, 3, 6, 29, 32, 35, 28, 31, 34, 27, 30, 33, 56, 59, 62, 55, 58, 61, 54, 57, 60],
    [80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42,
        41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0],
    [60, 57, 54, 61, 58, 55, 62, 59, 56, 33, 30, 27, 34, 31, 28, 35, 32, 29, 6, 3, 0, 7, 4, 1, 8, 5, 2, 69, 66, 63, 70, 67, 64, 71, 68, 65, 42, 39, 36, 43, 40, 37,
        44, 41, 38, 15, 12, 9, 16, 13, 10, 17, 14, 11, 78, 75, 72, 79, 76, 73, 80, 77, 74, 51, 48, 45, 52, 49, 46, 53, 50, 47, 24, 21, 18, 25, 22, 19, 26, 23, 20],
    [60, 61, 62, 57, 58, 59, 54, 55, 56, 69, 70, 71, 66, 67, 68, 63, 64, 65, 78, 79, 80, 75, 76, 77, 72, 73, 74, 33, 34, 35, 30, 31, 32, 27, 28, 29, 42, 43, 44,
        39, 40, 41, 36, 37, 38, 51, 52, 53, 48, 49, 50, 45, 46, 47, 6, 7, 8, 3, 4, 5, 0, 1, 2, 15, 16, 17, 12, 13, 14, 9, 10, 11, 24, 25, 26, 21, 22, 23, 18, 19, 20],
    [80, 77, 74, 79, 76, 73, 78, 75, 72, 53, 50, 47, 52, 49, 46, 51, 48, 45, 26, 23, 20, 25, 22, 19, 24, 21, 18, 71, 68, 65, 70, 67, 64, 69, 66, 63, 44, 41, 38,
        43, 40, 37, 42, 39, 36, 17, 14, 11, 16, 13, 10, 15, 12, 9, 62, 59, 56, 61, 58, 55, 60, 57, 54, 35, 32, 29, 34, 31, 28, 33, 30, 27, 8, 5, 2, 7, 4, 1, 6, 3, 0],
    [20, 19, 18, 23, 22, 21, 26, 25, 24, 11, 10, 9, 14, 13, 12, 17, 16, 15, 2, 1, 0, 5, 4, 3, 8, 7, 6, 47, 46, 45, 50, 49, 48, 53, 52, 51, 38, 37, 36, 41, 40, 39,
        44, 43, 42, 29, 28, 27, 32, 31, 30, 35, 34, 33, 74, 73, 72, 77, 76, 75, 80, 79, 78, 65, 64, 63, 68, 67, 66, 71, 70, 69, 56, 55, 54, 59, 58, 57, 62, 61, 60],
    [0, 3, 6, 1, 4, 7, 2, 5, 8, 27, 30, 33, 28, 31, 34, 29, 32, 35, 54, 57, 60, 55, 58, 61, 56, 59, 62, 9, 12, 15, 10, 13, 16, 11, 14, 17, 36, 39, 42, 37, 40, 43,
        38, 41, 44, 63, 66, 69, 64, 67, 70, 65, 68, 71, 18, 21, 24, 19, 22, 25, 20, 23, 26, 45, 48, 51, 46, 49, 52, 47, 50, 53, 72, 75, 78, 73, 76, 79, 74, 77, 80]
]
model_perms = [
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80],
    [72, 63, 54, 45, 36, 27, 18, 9, 0, 73, 64, 55, 46, 37, 28, 19, 10, 1, 74, 65, 56, 47, 38, 29, 20, 11, 2, 75, 66, 57, 48, 39, 30, 21, 12, 3, 76, 67, 58, 49, 40,
        31, 22, 13, 4, 77, 68, 59, 50, 41, 32, 23, 14, 5, 78, 69, 60, 51, 42, 33, 24, 15, 6, 79, 70, 61, 52, 43, 34, 25, 16, 7, 80, 71, 62, 53, 44, 35, 26, 17, 8],
    [80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42,
        41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0],
    [8, 17, 26, 35, 44, 53, 62, 71, 80, 7, 16, 25, 34, 43, 52, 61, 70, 79, 6, 15, 24, 33, 42, 51, 60, 69, 78, 5, 14, 23, 32, 41, 50, 59, 68, 77, 4, 13, 22, 31, 40,
        49, 58, 67, 76, 3, 12, 21, 30, 39, 48, 57, 66, 75, 2, 11, 20, 29, 38, 47, 56, 65, 74, 1, 10, 19, 28, 37, 46, 55, 64, 73, 0, 9, 18, 27, 36, 45, 54, 63, 72],
    [72, 73, 74, 75, 76, 77, 78, 79, 80, 63, 64, 65, 66, 67, 68, 69, 70, 71, 54, 55, 56, 57, 58, 59, 60, 61, 62, 45, 46, 47, 48, 49, 50, 51, 52, 53, 36, 37, 38,
        39, 40, 41, 42, 43, 44, 27, 28, 29, 30, 31, 32, 33, 34, 35, 18, 19, 20, 21, 22, 23, 24, 25, 26, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8],
    [80, 71, 62, 53, 44, 35, 26, 17, 8, 79, 70, 61, 52, 43, 34, 25, 16, 7, 78, 69, 60, 51, 42, 33, 24, 15, 6, 77, 68, 59, 50, 41, 32, 23, 14, 5, 76, 67, 58, 49,
        40, 31, 22, 13, 4, 75, 66, 57, 48, 39, 30, 21, 12, 3, 74, 65, 56, 47, 38, 29, 20, 11, 2, 73, 64, 55, 46, 37, 28, 19, 10, 1, 72, 63, 54, 45, 36, 27, 18, 9, 0],
    [8, 7, 6, 5, 4, 3, 2, 1, 0, 17, 16, 15, 14, 13, 12, 11, 10, 9, 26, 25, 24, 23, 22, 21, 20, 19, 18, 35, 34, 33, 32, 31, 30, 29, 28, 27, 44, 43, 42, 41, 40, 39,
        38, 37, 36, 53, 52, 51, 50, 49, 48, 47, 46, 45, 62, 61, 60, 59, 58, 57, 56, 55, 54, 71, 70, 69, 68, 67, 66, 65, 64, 63, 80, 79, 78, 77, 76, 75, 74, 73, 72],
    [0, 9, 18, 27, 36, 45, 54, 63, 72, 1, 10, 19, 28, 37, 46, 55, 64, 73, 2, 11, 20, 29, 38, 47, 56, 65, 74, 3, 12, 21, 30, 39, 48, 57, 66, 75, 4, 13, 22, 31, 40,
        49, 58, 67, 76, 5, 14, 23, 32, 41, 50, 59, 68, 77, 6, 15, 24, 33, 42, 51, 60, 69, 78, 7, 16, 25, 34, 43, 52, 61, 70, 79, 8, 17, 26, 35, 44, 53, 62, 71, 80]
]


def multiply_movedatalist(movedatalist):
    def multiply_movedata(movedata):
        # MoveDataを回転、反転して8倍に増やす
        mul = []
        for perm in engine_perms:
            new_flatboard = [movedata.flat_board[perm[idx]]
                             for idx in range(81)]
            new_legals = sorted([perm.index(legal)
                                 for legal in movedata.legal_moves])
            new_move = perm.index(movedata.move)
            new_movedata = MoveData(movedata.player_idx, movedata.is_first,
                                    movedata.agent_name, new_flatboard, new_legals, new_move, movedata.result)
            mul.append(new_movedata)
        return mul

    multiplied = []
    for movedata in movedatalist:
        multiplied += multiply_movedata(movedata)
    return multiplied


def distinct(movedatalist):
    # movedatalistから同じ盤面を取り除いてユニークにする
    exists = set()
    unique = []
    for movedata in movedatalist:
        boardint = movedata.get_boardint()
        if boardint not in exists:
            unique.append(movedata)
            exists.add(boardint)
    print(f"distinct : {len(movedatalist)} -> {len(unique)}")
    return unique
